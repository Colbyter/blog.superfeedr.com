---
layout: post
title: Webhooks Piping
categories: []
author_name: Julien
author_uri: http://ouvre-boite.com
author_email_md5: b30ce50678f0e934eaa6697425c59dd7
---

A "recent post by Progrium":http://progrium.com/blog/2012/11/19/from-webhooks-to-the-evented-web/ (aka webhook's biggest evangelist) reminded me that I needed to show how easy it was to plug Superfeedr in a *network of webhooks*. Here is what you can do, quite quickly!

h3. Piping

One of the great things with webhooks is that they're litterally _just HTTP urls_ that can run some arbitrary code. Once you understand that a given hook can also call another hook, it's obvious to think that you can chain multiple hooks to reach the result you want.
For example, you could have a webhook that converts some data into some other data before calling another hook.

h3. Example

Let's say I have a "Tumblr account":http://reposted-from-rss.tumblr.com/ that agregates "several feeds":http://push-pub.appspot.com/ that I really like[1]. I want to use Superfeedr to do that. Let me show you how it's done.

h4. Tumblr API.

Tumblr is currently unable to ingest JSON or Atom. However they offer a "posting API":http://www.tumblr.com/docs/en/api/v2. Since Superfeedr does not support this API, nor does auth, we will have to send the Superfeedr notifications to a webhook which will extract the meaningful data and post it to Tumblr.

h4. Webscript

For this, let's use "webscript.io":http://webscript.io. Once you've created a new webscript account, just create a new webhook and use the following code in it (make sure you fill the missing data too!):

<script src="https://gist.github.com/4219570.js?file=rss-to-tumblr.lua"></script>

Now, reserve the url of your webscript. We will have to plug that url into Superfeedr.

h4. Superfeedr

Open the Superfeedr "PubSubHubbub Console":http://superfeedr.com/users/console/feeds/pubsubhubbub_console. In the topic field, put the url of a feed that you want to repost, and in the callback field
put the url of your webscript. Do not forget to check for JSON conversion.

!/images/push-console.png!

Once you do that, as soon as Superfeedr detects an update in the feed, it will post that to webscript, which in return will post to Tumblr. That's it, *you've piped some RSS content from Superfeedr to Tumblr, thru Webscripts*. You can of course rinse and repeat with more feeds.


h3. Conclusion

Of course, this is just a small demo. The Lua scripting used by Webscript can actually be used to do a lot more, like send emails, convert the data, save it... etc. If you like "IFTTT":https://ifttt.com/ but always felt like you wanted to build a couple of rules that were a little more custom, then, webhooks are an amazing way of doing it :)

I want to thank "Steve Marx":http://blog.smarx.com/ for his precious OAuth help.


fn1. This is a feature that Tumblr used to offer.
