---
layout: post
title: "Weekend Projects: Superpipes"
categories: []
author_name: Julien
author_uri: http://twitter.com/julien51
author_email_md5: b30ce50678f0e934eaa6697425c59dd7
---

Google has their "20% free time":http://www.google.com/jobs/lifeatgoogle/englife/index.html. At Superfeedr, we use weekends, or flights.
This weekend has been pretty productive, we two open sourced projects.

h3. Superpipes

It's a rather frequent question from new users: _what's the difference between Superfeedr and "Yahoo Pipes":http://pipes.yahoo.com/pipes/_? It's not that easy to explain, but (at least for the feeds part), Superfeedr can be used to build something like Yahoo Pipes, and that's what we did.

The little app we built, called "Superpipes":https://github.com/superfeedr/superpipes aggregates feeds in *realtime*, but also transforms them. It's really *simple to configure, deploy, but also hack on*. It's using "node.js":http://nodejs.org/, "express":http://expressjs.com/, "redis":http://redis.io/, "heroku":http://www.heroku.com/, and of course, "Superfeedr":http://superfeedr.com/.

"Follow the instructions":https://github.com/superfeedr/superpipes/blob/master/README.markdown if you'd like to deploy your own instance and start aggregating!

h3. Feediscovery with node.

We sincerely love what we call _community webservices_. They are webservices that provide a simple feature that every developer could just implement themselves, but which are also so much more efficient if everybody shares them. Providing the "favicon for any url":http://getfavicon.appspot.com/ is an example. We built "feediscovery":http://feediscovery.appspot.com/ to extract urls from a url (and we're working on that to support webfinger too!).

Now, web services are not always easy to integrate in actual apps: you have to use and HTTP library, JSON parsers... etc. Sometimes I wish I could just type <code>google('keyord', function(err, results) { ... });</code> and get the results yielded, so we built "node-feediscovery":https://github.com/superfeedr/node-feediscovery, and you can use it exactly like that: <code>feediscovery('url', function(err, links) { .. });</code>.

What's your latest weekend project?
