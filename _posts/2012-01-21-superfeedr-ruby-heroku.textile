---
layout: post
title: Sinatra, Heroku and Superfeedr
categories: []
author_name: Julien
author_uri: http://ouvre-boite.com
author_email_md5: b30ce50678f0e934eaa6697425c59dd7
---

This is a short tutorial on how to deploy an Sinatra web app that uses Superfeedr to Heroku. This app provides a very simple home page that lists the latests entries of some of your favorites sites. It's greatly inspired by the awesome "start.io":http://start.io/ from the awesome "Peter Vidani":http://petervidani.com/ and "Jacob Bijani":http://jacobbijani.com/

h3. Set up

We will use "Sinatra":http://www.sinatrarb.com/, the "Rack Superfeedr gem":https://github.com/superfeedr/rack-superfeedr, as well as Twitter's bootstrap for the layout, because I suck at making things shinny.

Let's start first by creating the application on Heroku.

Create the repo:
<code>
    mkdir start-page && cd start-page
</code>
<code>
    git init
</code>
<code>
    git add .
</code>
<code>
    git commit -m "init"
</code>

Create the application on Heroku:
<code>
    heroku create --stack cedar
</code>

Add the hostname as an environment variable. It is used by the rack middleware to build the callback urls:
<code>
    heroku config:add  HOST=<YOUR APP DOMAIN>
</code>
Add the superfeedr addon:
<code>
    heroku addons:add superfeedr
</code>

h3. Implementation

This implementation is minimalistic, feel free to look at the code closely.

Let's add the files:
<code>
    touch app.rb
</code>
<code>
    touch config.ru
</code>
<code>
    touch Gemfile
</code>
<code>
    mkdir views/ && touch views/index.erb
</code>

In <code>app.rb</code>:
<script src="https://gist.github.com/1653742.js?file=app.rb"></script>

In <code>config.ru</code>:
<script src="https://gist.github.com/1653744.js?file=config.ru"></script>

In <code>Gemfile</code>:
<script src="https://gist.github.com/1653748.js?file=Gemfile"></script>

In <code>views/index.erb</code>:
<script src="https://gist.github.com/1653753.js?file=index.erb"></script>

<code>
    git add .
</code>
<code>
    git commit -m "implemented" -a
</code>

h3. Deploying

That's the simplest part:

First, let's install the gems.
<code>
    bundle install
</code>
<code>
    git add Gemfile.lock
</code>
<code>
    git commit -m "adding Gemfile.lock" -a
</code>

And push the code
<code>
    git push heroku master
</code>

... And that's it!

Point your browser to your Heroku application. It is likely that you'll have to wait for the feeds you have added to have new content before you see it appear on your home page. The last step is to make this page your default start page in your favorite web browser.

Check "mine":http://floating-sky-5183.herokuapp.com/!

h2. Gotchas

Heroku will put this application to sleep if you only use a single dyno... and since we store the entries in memory for now, that means you'll lose that data if the app goes idle. The solution is very simple: store the data, using another "Heroku addon":https://addons.heroku.com/!

Of course, this is a very simple application and there is a ton of little things that one can do to improve it:

* add the ability to dynamically subscribe to feeds
* show meta data, like the number of bit.ly clicks on each of the stories
* auto-refresh the page
* ...

The *Superfeedr Heroku addon* is still in alpha to this date, so if you want to run, this, please "email us":http://superfeedr.com/about and we'll get you in!
