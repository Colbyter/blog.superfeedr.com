---
layout: post
title: PubSubHubbub is not a license
categories: []
---

Today, "GNIP and Twitter announced a deal where GNIP will be able to resell some of the Twitter data":http://www.readwriteweb.com/archives/twitter_to_sell_50_of_all_tweets_for_360kyear_thro.php. Twitter repeated several times that they didn't want to use PubSubHubbub and *prefered closed and proprietary solutions*. I believe that, from the beginning, we were not clear enough that *PubSubHubbub* was -just- a technical protocol. It's a mistake that I'm trying to repair now.

* If you're a subscriber, implementing PubSubHubbub doesn't mean that you will have access to any content and have the right to use this content in any way.
* Similarly, if you're a publisher, making your content (or some of your content) available as PubSubHubbub doesn't mean that you will grant any kind of license to your content and that you will allow anyone to do anything with it_.

h3. What is PubSubHubbub?

It is just a *technical protocol*, which means that it only defines technical means of interaction between 2 services. It's an "open protocol":http://en.wikipedia.org/wiki/Open_standard, which means that *nobody owns it and nobody can ask you to stop using it*, or can claim ownership over it. It also means that you can participate and try it make it better.

If (and only if!) the publisher agrees that the subscriber gets this content to do something specific, then, yes, they -can- should use PubSubHubbub for the technical aspects.

h3. It is not a license!

The "technical specification":http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html *does not specify* if the publisher should make all its data available to anyone at any conditions. For example, one can imagine that a publisher only grants access to specific subscribers for specific resources. We could also imagine that a publisher charges for its content and will only allow subscriptions from subscribers who paid a fee. Finally, PubSubHubbub can also be used internally for private data that is not intended to ever leave a given private/closed network.

In any case, making your feed available via PubSubHubbub doesn't mean that you have to make all of your content available as PubSubHubbub, and it doesn't mean that you allow subscribers to do anything but subscribing. If you want to prevent them from re-publishing, you can certainly get them to agree to specific terms of usage which indicate this.

The net-neutrality debate has been raging, but it could almost be considered as an example of this : the technical and business layers are distinct and *technical concerns should not govern business/legal concerns*.

At Superfeedr, we do this by having a specific setting that *allows any publisher to accept or deny a subscription*. We do host some very private hubs that nobody can access, but a single identified 3rd party application.

h3. Examples

If you use Superfeedr subscriber's services, you will have to pay for the notifications we send you. Yet, we use PubSubHubbub. *It's an open protocol, and we charge for its usage. Other PubSubHubbub providers could do this*. Getting data thru the Superfeedr pipes doesn't mean that you own the data or can even republish it. The publisher's terms of service still apply!

You can also certainly define feeds with specific levels of access, and have different pricing for each of them. You can also define what subscriber can or can't do with your content... etc.

If you only remembered one thing, it should be this one : PubSubHubbub solves a technical issue, nothing less, nothing more.
